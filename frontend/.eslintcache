[{"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/App.js":"1","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/Login.js":"2","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/util.js":"3","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/TopBar.js":"4","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/api.js":"5","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/Register.js":"6","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/Dashboard.js":"7","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/CompanyList.js":"8","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/JobList.js":"9","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Context/User.js":"10","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/CompanyJobList.js":"11"},{"size":1304,"mtime":1606781724545,"results":"12","hashOfConfig":"13"},{"size":2985,"mtime":1606777619524,"results":"14","hashOfConfig":"13"},{"size":173,"mtime":1606748428827,"results":"15","hashOfConfig":"13"},{"size":1083,"mtime":1606743053261,"results":"16","hashOfConfig":"13"},{"size":282,"mtime":1606776801336,"results":"17","hashOfConfig":"13"},{"size":2165,"mtime":1606745143063,"results":"18","hashOfConfig":"13"},{"size":461,"mtime":1606780763271,"results":"19","hashOfConfig":"13"},{"size":3573,"mtime":1606781686734,"results":"20","hashOfConfig":"13"},{"size":3469,"mtime":1606781663506,"results":"21","hashOfConfig":"13"},{"size":88,"mtime":1606774514161,"results":"22","hashOfConfig":"13"},{"size":2075,"mtime":1606782388288,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1y12t43",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/App.js",["47","48"],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/Login.js",["49"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  Alert,\n  Col,\n} from \"reactstrap\";\nimport { LOGIN, VALIDATE_USER } from \"../api\";\nimport { UserContext } from \"../Context/User\";\n\nconst Login = () => {\n  const [status, setStatus] = useState(\"init\");\n  const [error, setError] = useState(\"\");\n  const { setUser, user } = useContext(UserContext);\n\n  const loginUser = ({ currentUser, token }) => {\n    token && window.localStorage.setItem(\"token\", token);\n    setUser({ ...user, loggedIn: true, user: currentUser });\n    setStatus(\"redirect\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password } = e.target;\n    const result = await fetch(LOGIN, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: password.value,\n      }),\n    }).then(async (res) => ({\n      error: !res.ok,\n      data: await res.json(),\n    }));\n\n    if (result.error) {\n      setError(result.data);\n      setStatus(\"error\");\n      return;\n    }\n    loginUser({ currentUser: result.data.user, token: result.token });\n  };\n\n  const userToken = window.localStorage.getItem(\"token\");\n\n  const checkUserByToken = async (token) => {\n    fetch(VALIDATE_USER, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.isvalid) {\n          loginUser({ currentUser: res.user });\n          return;\n        }\n        window.localStorage.removeItem(\"token\");\n        setStatus(\"login\");\n      });\n  };\n\n  useEffect(() => {\n    if (userToken) {\n      checkUserByToken(userToken);\n      return;\n    }\n    setStatus(\"login\");\n  }, []);\n\n  if (status === \"init\") return <CheckingAccount />;\n\n  if (status === \"redirect\") return <Redirect to=\"/dashboard\" />;\n\n  return (\n    <Col md={8} className=\"mt-4\">\n      <Card className=\"p-2\">\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n            />\n          </FormGroup>\n          {status === \"error\" && <p className=\"text-danger\">{error.msg}</p>}\n          <Button>Login</Button>\n        </Form>\n      </Card>\n    </Col>\n  );\n};\n\nconst CheckingAccount = () => (\n  <Alert color=\"info\">Checking your account...</Alert>\n);\n\nexport default Login;\n","/Users/sajad/Projects/job-archive/wiredelat/frontend/src/util.js",[],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/TopBar.js",["50","51"],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/api.js",[],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/Register.js",[],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/Dashboard.js",[],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/CompanyList.js",["52"],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/JobList.js",["53"],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Context/User.js",[],"/Users/sajad/Projects/job-archive/wiredelat/frontend/src/Components/CompanyJobList.js",["54","55","56","57","58"],{"ruleId":"59","severity":1,"message":"60","line":5,"column":3,"nodeType":"61","messageId":"62","endLine":5,"endColumn":9},{"ruleId":"59","severity":1,"message":"63","line":8,"column":3,"nodeType":"61","messageId":"62","endLine":8,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":83,"column":6,"nodeType":"66","endLine":83,"endColumn":8,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":21},{"ruleId":"59","severity":1,"message":"69","line":15,"column":16,"nodeType":"61","messageId":"62","endLine":15,"endColumn":23},{"ruleId":"64","severity":1,"message":"70","line":83,"column":6,"nodeType":"66","endLine":83,"endColumn":8,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"72","line":83,"column":6,"nodeType":"66","endLine":83,"endColumn":8,"suggestions":"73"},{"ruleId":"59","severity":1,"message":"74","line":3,"column":3,"nodeType":"61","messageId":"62","endLine":3,"endColumn":9},{"ruleId":"59","severity":1,"message":"75","line":11,"column":3,"nodeType":"61","messageId":"62","endLine":11,"endColumn":10},{"ruleId":"59","severity":1,"message":"76","line":12,"column":3,"nodeType":"61","messageId":"62","endLine":12,"endColumn":8},{"ruleId":"59","severity":1,"message":"77","line":23,"column":9,"nodeType":"61","messageId":"62","endLine":23,"endColumn":16},{"ruleId":"64","severity":1,"message":"78","line":36,"column":3,"nodeType":"61","endLine":36,"endColumn":12,"suggestions":"79"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUserByToken' and 'userToken'. Either include them or remove the dependency array.","ArrayExpression",["80"],"'UserContext' is defined but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllCompanies'. Either include it or remove the dependency array.",["81"],"React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array.",["82"],"'Button' is defined but never used.","'Spinner' is defined but never used.","'Table' is defined but never used.","'getJobs' is assigned a value but never used.","React Hook useEffect contains a call to 'setJobList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.jobs, user.userCompanies] as a second argument to the useEffect Hook.",["83"],{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [checkUserByToken, userToken]",{"range":"92","text":"93"},"Update the dependencies array to be: [getAllCompanies]",{"range":"94","text":"95"},"Update the dependencies array to be: [getJobs]",{"range":"96","text":"97"},"Add dependencies array: [user.jobs, user.userCompanies]",{"range":"98","text":"99"},[2048,2050],"[checkUserByToken, userToken]",[1933,1935],"[getAllCompanies]",[1797,1799],"[getJobs]",[1281,1281],", [user.jobs, user.userCompanies]"]